{"version":3,"sources":["../src/module.js"],"names":["_","PanelCtrl","panelDefaults","mode","content","DocumentationCtrl","$scope","$injector","templateSrv","$sce","defaults","panel","events","on","onInitEditMode","bind","onRender","addEditorTab","editorTabIndex","updateContent","renderText","renderingCompleted","replace","html","trustAsHtml","scopedVars","e","console","log","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,a;;AACCC,qB,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;AAKFC,yB,GAAgB;AAClBC,sBAAM,MADY,EACJ;AACdC,yBAAS;AAFS,a;;8DAKTC,iB;;;AAET,2CAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,IAA5C,EAAkD;AAAA;;AAAA,sJACxCH,MADwC,EAChCC,SADgC;;AAG9C,0BAAKE,IAAL,GAAYA,IAAZ;AACA,0BAAKD,WAAL,GAAmBA,WAAnB;;AAEAR,sBAAEU,QAAF,CAAW,MAAKC,KAAhB,EAAuBT,aAAvB;;AAEA,0BAAKU,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,SAAf,EAA0B,MAAKG,QAAL,CAAcD,IAAd,OAA1B;AACA,0BAAKH,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKG,QAAL,CAAcD,IAAd,OAAzB;AAV8C;AAWjD;;;;qDAEgB;AACb,6BAAKE,YAAL,CAAkB,SAAlB,EAA6B,gDAA7B;AACA,6BAAKC,cAAL,GAAsB,CAAtB;AACH;;;+CAEU;AACP,4BAAI,KAAKP,KAAL,CAAWR,IAAX,KAAoB,MAAxB,EAAgC;AAC5B,iCAAKgB,aAAL,CAAmB,KAAKR,KAAL,CAAWP,OAA9B;AACH,yBAFD,MAEO,IAAI,KAAKO,KAAL,CAAWR,IAAX,KAAoB,MAAxB,EAAgC;AACnC,iCAAKiB,UAAL,CAAgB,KAAKT,KAAL,CAAWP,OAA3B;AACH;AACD,6BAAKiB,kBAAL;AACH;;;+CAEUjB,O,EAAS;AAChBA,kCAAUA,QACLkB,OADK,CACG,IADH,EACS,OADT,EAELA,OAFK,CAEG,IAFH,EAES,MAFT,EAGLA,OAHK,CAGG,IAHH,EAGS,MAHT,EAILA,OAJK,CAIG,KAJH,EAIU,OAJV,CAAV;AAKA,6BAAKH,aAAL,CAAmBf,OAAnB;AACH;;;kDAEamB,I,EAAM;AAChB,4BAAI;AACA,iCAAKnB,OAAL,GACI,KAAKK,IAAL,CAAUe,WAAV,CAAsB,KAAKhB,WAAL,CAAiBc,OAAjB,CAAyBC,IAAzB,EAA+B,KAAKZ,KAAL,CAAWc,UAA1C,CAAtB,CADJ;AAEH,yBAHD,CAGE,OAAOC,CAAP,EAAU;AACRC,oCAAQC,GAAR,CAAY,oBAAZ,EAAkCF,CAAlC;AACA,iCAAKtB,OAAL,GAAe,KAAKK,IAAL,CAAUe,WAAV,CAAsBD,IAAtB,CAAf;AACH;AACJ;;;;cA9CkCtB,S;;;;AAiDvCI,8BAAkBwB,WAAlB,GAAgC,aAAhC;;iCAEQxB,iB","file":"module.js","sourcesContent":["import _ from \"lodash\";\r\nimport {PanelCtrl} from \"app/plugins/sdk\";\r\nimport './bootstrap-popover.js';\r\nimport './css/bootstrap-popover.css!';\r\nimport './css/documentation.css!';\r\n\r\nconst panelDefaults = {\r\n    mode: \"text\", // 'html', 'text'\r\n    content: \"# title\"\r\n};\r\n\r\nexport class DocumentationCtrl extends PanelCtrl {\r\n\r\n    constructor($scope, $injector, templateSrv, $sce) {\r\n        super($scope, $injector);\r\n\r\n        this.$sce = $sce;\r\n        this.templateSrv = templateSrv;\r\n\r\n        _.defaults(this.panel, panelDefaults);\r\n\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('refresh', this.onRender.bind(this));\r\n        this.events.on('render', this.onRender.bind(this));\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.addEditorTab('Options', 'public/plugins/documentation-panel/editor.html');\r\n        this.editorTabIndex = 1;\r\n    }\r\n\r\n    onRender() {\r\n        if (this.panel.mode === 'html') {\r\n            this.updateContent(this.panel.content);\r\n        } else if (this.panel.mode === 'text') {\r\n            this.renderText(this.panel.content);\r\n        }\r\n        this.renderingCompleted();\r\n    }\r\n\r\n    renderText(content) {\r\n        content = content\r\n            .replace(/&/g, '&amp;')\r\n            .replace(/>/g, '&gt;')\r\n            .replace(/</g, '&lt;')\r\n            .replace(/\\n/g, '<br/>');\r\n        this.updateContent(content);\r\n    }\r\n\r\n    updateContent(html) {\r\n        try {\r\n            this.content =\r\n                this.$sce.trustAsHtml(this.templateSrv.replace(html, this.panel.scopedVars));\r\n        } catch (e) {\r\n            console.log('Text panel error: ', e);\r\n            this.content = this.$sce.trustAsHtml(html);\r\n        }\r\n    }\r\n}\r\n\r\nDocumentationCtrl.templateUrl = 'module.html';\r\n\r\nexport {DocumentationCtrl as PanelCtrl}\r\n"]}